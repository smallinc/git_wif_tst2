
name: Status Summary Dynamic

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  repository_dispatch:
    types: [deploy]

jobs:
  build:
    name: Test1
    runs-on: ubuntu-latest
  
    outputs:
      id: output_var
      value: "Default Value"
    
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
    # Add your build/test steps here
    - name: Set up GitHub CLI
      run: |
        # echo "Setting up GitHub CLI"
        # echo "${{ secrets.GH_TOKEN }}" > gh_token
        gh auth login --with-token $GH_TOKEN

    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: './test'

    - name: Install Python and Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip3 install ansible

    - name: Display Ansible version
      run: ansible --version

    - name: Run the playbook
      run: |
          echo current working directory: $PWD
          cd test
          ls -la
          echo ls -la
          cd ansible
          ls -la
          echo ls -la
          ansible-playbook ./playbook/test2_playbook.yml
      shell: bash
      id: set1

    - name: Display custom stat from file
      id: step1
      run: |
        # Read the content of the JSON file
        sudo apt-get install -y jq
        cat /tmp/json_file.json | base64 -d
        json_content=$(cat /tmp/json_file.json | base64 -d)

        # Parse the JSON content and print the value of the 'name' key
        name_value=$(echo "$json_content" | jq -r .Name1)
        echo "Value of 'name' key: $name_value"


    - name: Set status check - Success
      run: |
        {
          echo "### :book: *Workflow Inputs*"
          echo "| Parameter   | Value |"
          echo "| :-------- | :----- |"
          echo "| Release Branch | ${RELEASE_BRANCH} |"
          echo "| Project Name   | ${PROJECT_NAME}|"
          echo "| App Name       | ${APP_NAME}|"
          echo "| Config File Name | ${CONFIG_FILE_NAME}|"
          echo 
          echo "### :book: *Workflow Outputs*"
            
        } >> $GITHUB_STEP_SUMMARY
        json_file="/tmp/json_file.json"
        output_file="$GITHUB_STEP_SUMMARY"        
        
        # Check if jq is installed
        if ! command -v jq &> /dev/null; then
            echo "jq is not installed. Please install jq to run this script."
            exit 1
        fi
        base64 -d "$json_file" > decoded_json.json
        
        # Start Markdown table
        echo "| Parameter | Value |" >> "$output_file"
        echo "| --- | ----- |" >> "$output_file"
        
        # Loop through keys and values
        jq -r 'to_entries | .[] | "\(.key) \(.value)"' decoded_json.json |
        while read -r line; do
            key=$(echo "$line" | awk '{print $1}')
            value=$(echo "$line" | awk '{print $2}')
            # Add row to Markdown table
            echo "| $key | $value |" >> "$output_file"
        done



      
    - name: Log if any of the previous steps fail
      if: ${{ failure() }}
      run: |
        echo current working directory: $PWD
        echo ls -la
        # cd test
        # echo current working directory1: $PWD
        echo 
        echo "One or more previous steps failed. Viewing GitHub Actions Run log..."
        gh run view ${{ github.run_id }} --log-failed >> $GITHUB_STEP_SUMMARY

